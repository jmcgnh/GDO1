function pulseDoor(data) {
    server.log("PULSE DOOR START");
    server.log("pulseDoor: data=" + data);
    if( data == 1){
       door1Switch.write(1);
    } else if (data == 2){
        door2Switch.write(1);
    }
    imp.wakeup(3, pulseDoorStop);
}
function pulseDoorStop() {
    server.log("PULSE DOOR STOP");
    door1Switch.write(0);
    door2Switch.write(0);
}
function closeDoor(data) {
    local isOpen;
    isOpen=getDoorState(data);
    if( isOpen) {
        pulseDoor(data);
    }
}
function openDoor(data) {
    local isOpen;
    isOpen=getDoorState(data);
    if(! isOpen) {
        pulseDoor(data);
    }
}

function getDoorState(data) {
    range <- Ultrasonic(trig, echo);

    local isOpen = 0;
    local rangeVal = range.read_cm() ;
    if (rangeVal < 60) {
        isOpen = 1;
    }
    server.log("Door distance: " + rangeVal + " isOpen: " + isOpen);
    server.log("Door " + doorStateAsString(isOpen));
    agent.send("doorState", doorStateAsString(isOpen));
    return isOpen;
}
function doorStateAsString(state) {
    if (state == 1)
        return "open";
    
    return "closed";
}

class Ultrasonic {
    // consts
    static TO = 500; // timeout in ms
    
    // pins
    _trig   = null;
    _echo  = null;
    _echo2  = null;

    // aliased methods
    _tw     = null;
    _er     = null;
    _hu     = null;
    _hm     = null;

    // vars
    _es     = null; // echo start time
    _ee     = null; // echo end time
    _ew     = null; // echo width in us

    constructor(trig, echo) {
        _trig = trig;
        _echo = echo;

        _hu   = hardware.micros.bindenv(hardware);
        _hm   = hardware.millis.bindenv(hardware);
        _tw   = _trig.write.bindenv(_trig);
        _er   = _trig.read.bindenv(_echo);
    }

    function read_cm() {
        local st = _hm(); // start time for timeout
        // Quickly pulse the trig pin
        _tw(0); _tw(1); _tw(0);

        // Wait for the rising edge on echo
        while (_er() == 0 && (_hm() - st) < TO);
        _es = _hu();

        // Time to the falling edge on echo
        while (_er() == 1 && (_hm() - st) < TO);
        _ee = _hu();
        
        server.log("echo start " + _es);
        server.log("echo end " + _ee);
        _ew=_ee - _es;
        server.log("echo width " + _ew + " microsec");

        if ((_hm() - st) >= TO) return -1;
        return (_ee - _es)/58.0;
    }
}

trig <- hardware.pin1;
echo <- hardware.pin2;
echo2 <- hardware.pin5
door1Switch <- hardware.pin7;
door2Switch <- hardware.pin8

trig.configure(DIGITAL_OUT,0);
echo.configure(DIGITAL_IN);
echo2.configure(DIGITAL_IN);
door1Switch.configure(DIGITAL_OUT, 0);
door1Switch.configure(DIGITAL_OUT, 0);
agent.on("pulseDoor", pulseDoor);
agent.on("closeDoor", closeDoor);
agent.on("openDoor", openDoor);
agent.on("getDoorState", getDoorState);

getDoorState(0);

server.log("Imp online @ " + imp.getssid() + "!");
